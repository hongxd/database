// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using database;

#nullable disable

namespace database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("database.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("管理员Id，唯一");

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name")
                        .HasComment("真实名称");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<int?>("Sex")
                        .HasColumnType("integer")
                        .HasColumnName("sex")
                        .HasComment("性别");

                    b.Property<string>("Tel")
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("tel")
                        .IsFixedLength()
                        .HasComment("电话");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("userName")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.ToTable("admin", null, t =>
                        {
                            t.HasComment("管理员表");
                        });
                });

            modelBuilder.Entity("database.Entities.Dormbuild", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("宿舍楼Id，唯一");

                    b.Property<string>("Detail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("detail")
                        .HasComment("详细说明");

                    b.Property<Guid?>("Dormmanager")
                        .HasColumnType("uuid")
                        .HasColumnName("dormmanager")
                        .HasComment("管理员id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name")
                        .HasComment("宿舍楼名称");

                    b.Property<int?>("Sex")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("sex")
                        .HasComment("宿舍楼居住人的性别");

                    b.HasKey("Id");

                    b.ToTable("dormbuild", null, t =>
                        {
                            t.HasComment("存储宿舍楼信息");
                        });
                });

            modelBuilder.Entity("database.Entities.Dormitory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("寝室Id，唯一");

                    b.Property<Guid?>("DormBuildId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("dormBuildId")
                        .HasComment("所属宿舍楼Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name")
                        .HasComment("寝室名称");

                    b.HasKey("Id");

                    b.ToTable("dormitory", null, t =>
                        {
                            t.HasComment("寝室管理");
                        });
                });

            modelBuilder.Entity("database.Entities.Dormmanager", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("宿舍管理员Id，唯一");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name")
                        .HasComment("真实姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<int?>("Sex")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("sex")
                        .HasComment("性别");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("tel")
                        .IsFixedLength()
                        .HasComment("电话");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("userName")
                        .HasComment("用户名，用于登录系统");

                    b.HasKey("Id");

                    b.ToTable("dormmanager", null, t =>
                        {
                            t.HasComment("主要存储宿舍管理员信息");
                        });
                });

            modelBuilder.Entity("database.Entities.NoticeDb", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("公告Id，唯一");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("content")
                        .HasComment("发布内容");

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date")
                        .HasComment("公告发布日期");

                    b.Property<Guid?>("PId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("Pid")
                        .HasComment("公告发布人id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title")
                        .HasComment("公告标题");

                    b.HasKey("Id");

                    b.ToTable("notice", null, t =>
                        {
                            t.HasComment("用于存储公告信息");
                        });
                });

            modelBuilder.Entity("database.Entities.Repair", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("报修Id，唯一");

                    b.Property<string>("Detail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("detail")
                        .HasComment("物品详细描述");

                    b.Property<Guid?>("DormitoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("dormitoryId")
                        .HasComment("报修寝室");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("reportTime")
                        .HasComment("上报时间");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("报修状态");

                    b.Property<string>("Thing")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("thing")
                        .HasComment("上报物品");

                    b.HasKey("Id");

                    b.ToTable("repair", null, t =>
                        {
                            t.HasComment("用于存储报修记录");
                        });
                });

            modelBuilder.Entity("database.Entities.Student", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("学生Id，唯一");

                    b.Property<Guid?>("DormitoryId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("dormitoryId")
                        .HasComment("寝室Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("name")
                        .HasComment("姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<int?>("Sex")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("sex")
                        .HasComment("性别");

                    b.Property<string>("StuNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("stuNum")
                        .IsFixedLength()
                        .HasComment("学生学号");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("tel")
                        .IsFixedLength()
                        .HasComment("电话");

                    b.HasKey("Id");

                    b.ToTable("student", null, t =>
                        {
                            t.HasComment("学生表，用于存放学生信息");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
